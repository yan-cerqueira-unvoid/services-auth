version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"  # Habilita o dashboard (apenas para desenvolvimento)
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--accesslog=true"
      - "--accesslog.format=json"
      - "--log.level=DEBUG"  # Para visualizar logs detalhados
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
    ports:
      - "80:80"   # HTTP
      - "443:443" # HTTPS
      - "8080:8080" # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/dynamic:/etc/traefik/dynamic
      - ./traefik/certs:/etc/certs
    networks:
      - poc-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"

  # API Service usando Gin
  api-service:
    build:
      context: ./api-service
      dockerfile: Dockerfile
    container_name: api-service
    restart: unless-stopped
    environment:
      - GIN_MODE=debug
      - PORT=8000
      - AUTH_SERVICE_URL=http://auth-service:8001
      - LOG_LEVEL=debug
    volumes:
      - ./api-service:/app
    networks:
      - poc-network
    depends_on:
      - auth-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.api-auth.forwardauth.address=http://auth-service:8001/validate"
      - "traefik.http.middlewares.api-auth.forwardauth.authResponseHeaders=X-User-ID,X-User-Role"
      - "traefik.http.routers.api.middlewares=api-auth"

  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    restart: unless-stopped
    environment:
      - PORT=8001
      - MONGODB_URI=mongodb://mongodb:27017/auth
      - JWT_SECRET=your_jwt_secret_key_change_this_in_production
      - TOKEN_EXPIRY=24h
      - LOG_LEVEL=debug
    volumes:
      - ./auth-service:/app
    networks:
      - poc-network
    depends_on:
      - mongodb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.localhost`)"
      - "traefik.http.routers.auth.entrypoints=web"
      - "traefik.http.services.auth.loadbalancer.server.port=8001"

  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=auth
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - poc-network
    command: mongod --logpath=/dev/stdout
    ports:
      - "27017:27017"

networks:
  poc-network:
    driver: bridge

volumes:
  mongodb_data:
